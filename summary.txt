##visual studio - its an IDE DEVELOPED my Microsoft used to develop websites,desktop applications etc

1. solution explorer- displays a solution and the project items created
2. Debug - allows you to inspect your code and finding errors.
3. git changes - here we can push code to github
4. Build - used to build the solution
5. Rebuild - used to rebuild the soln which is already build
6. 

#features:designer,debugger,code editor,extensiblity,

#ASP.NET - is a web Framework designed and developed my microsoft..
*it is built on CLR(Common Language Runtime)

Two major components:
#CLR - Common Language Run time
#Class Library

ADO.NET - Data Base support

WEB APPLICATIONS
#ASP.NET
#WF(Workflow)

Desktop Apps
#Winforms 
#WPF and silver light

compiled vs Interpreted language
compiled languages runs slowly if we do any mistakes wil get to knw der itself
interpreted languages are fast bt we wont get to knw errors untill we run it..(might get run time errors)

## ASP stands for active server pages and it is a server-side script engine for building web pages

23/09/22

## gone through visual studio video n tools
## Basics of git hub
##Data types in c# - 3 types 1.value data types 2.Refrence data types 3.pointer data types

26/09/22

console class - Console class provides some methods and properties using which we can implement the user interface in a console application.

#Variables in c#
1.static variable
2.Non-static
3.const variables-we cannot chnge its value once its declared
4.Read only variables - we cant change/modify (bt we can modify with in constructor)

##BOXING/UNBOXING
1.BOXING - Boxing means you basically set a value type to a reference type. 
2.UNBOXING - unboxing means you basically set a reference type to a value type.

##Type casting - converting one data type to another
2 types- 1.Implicit - converting lower to higher data type
         2.Explicit - converting higher to lower data type

EXAMPLE: int x=10;
         object y =x;//boxing
         int z= (int)y;//unboxing

##STATIC AND NON-STATIC
1.STATIC - members which are declared with a keyword are called static members
2.NON-STATIC - Which are not declared with any keyword.
     
##FUNCTIONS
1.Built-in-Functions
2.user defined 

## 28/09/22

class and objects
class-its a blueprint tat describes the propeties of object
object-It is an instance of a class.An object can be considered as a thing that can perform activities.

*syntax to create a class and object

public class demo{

}
//creating a object for class
demo d = new demo();


constructor-It is a special method present inside a class responsible for initializing the variables of that class. 

types of constructor
1.parameterized constructor
2.non parameterized constructor

*syntax for  creating constructor
public demo(){
   ------
}

##29/09/22
*have gone through class objects constructors
*practiced how to create a class and object 
*get set methods
*functions
*how to call a function

#30/09/22
today have gone through basics of following oops concepts
1.Inheretance
2.Polimorphism
3.Interface
#3/10/22

-ABSTRACTION - Hiding the implementation and showing only neccesarry information is called Abstraction.
-Abstract class - it is a restricted class that cannot be used to create objects

y and wen to use Abstract class
-Hiding certain details and only show the important details of an object.
-we cant create an object of abstract class
-To access the abstract class, it must be inherited from another class
-using sealed keyword we can restrict inheritance

-contract of Abstract class - if we inherit a Abstract class we need to provide its implementation in the child class..

-syntax for abstract class:

abstract class cricketer{
  public abstarct void play();//only declaration no implementation
}

Abstract class                           Interface.
1.Here we can have both abstract     1.its mandatory to have abstract methods 
and non-abstract methods

2.Abstract class members can have    2.Interface members are public by default and we cant have access modifiers
  acces modifiers.abstract class
  member is private by default.
3.Abstract class can have fields.    3.Interface cannot have fields.(attributes)

#3/10/22

-ABSTRACTION - Hiding the implementation and showing only neccesarry information is called Abstraction.
-Abstract class - it is a restricted class that cannot be used to create objects

y and wen to use Abstract class
-Hiding certain details and only show the important details of an object.
-we cant create an object of abstract class
-To access the abstract class, it must be inherited from another class
-using sealed keyword we can restrict inheritance

-contract of Abstract class - if we inherit a Abstract class we need to provide its implementation in the child class..

-syntax for abstract class:

abstract class cricketer{
  public abstarct void play();//only declaration no implementation
}

Abstract class                           Interface.
1.Here we can have both abstract     1.its mandatory to have abstract methods 
and non-abstract methods

2.Abstract class members can have    2.Interface members are public by default and we cant have access modifiers
  acces modifiers.abstract class
  member is private by default.
3.Abstract class can have fields.    3.Interface cannot have fields.(attributes)

#3/10/22 - Today have gone through below topics 

-ABSTRACTION - Hiding the implementation and showing only neccesarry information is called Abstraction.
-Abstract class - it is a restricted class that cannot be used to create objects

y and wen to use Abstract class
-Hiding certain details and only show the important details of an object.
-we cant create an object of abstract class
-To access the abstract class, it must be inherited from another class
-using sealed keyword we can restrict inheritance

-contract of Abstract class - if we inherit a Abstract class we need to provide its implementation in the child class..

-syntax for abstract class:

abstract class cricketer{
  public abstarct void play();//only declaration no implementation
}

Abstract class                           Interface.
1.Here we can have both abstract     1.its mandatory to have abstract methods 
and non-abstract methods

2.Abstract class members can have    2.Interface members are public by default and we cant have access modifiers
  acces modifiers.abstract class
  member is private by default.
3.Abstract class can have fields.    3.Interface cannot have fields.(attributes)

4/10/22
##partial class

Advantages : 

-With the help of partial classes, multiple developers can work simultaneously in the same class in different files.
-With the help of a partial class concept, you can split the UI of the design code and the business logic code to read and understand the code.
-When you were working with automatically generated code, the code can be added to the class without having to recreate the source file like in Visual studio.
-You can also maintain your application in an efficient manner by compressing large classes into small ones.  

syntax:

public partial Clas_name  
{
        // code
}
                  
#Static Class in C#
-The class which is created by using the static modifier is called a static class in C#. A static class can contain only static members.
-A static class can contain only static members. It is not possible to create an instance of a static class. This is because it contains only static members.
-we can access the static members of a class by using the class name

*Extension methods
 -to add new methods into a class without editing the source code of the class i.e. 
 -if a class consists of a set of members in it and in the future if you want to add new methods into the class,
- you can add those methods without making any changes to the source code of the class.

# 6/10/22

-Property - is a member of a class using which we can expose values associated with a class to outside environment.
- in a clas data fields data fields must always b private so we cant acces them outside class.. so we use properties to acces them outside class.

Advantage - using get set we can set the condition for example: u want to modify a value and u want tat value to b higher than the original assigned value.
so in this case u can use conditions in get set..

syntax:
double radius = 15.24

public double radius{
get {return radius;}
set {radus = value;}

What is an Exception in C#?
An Exception is a class in C# which is responsible for abnormal termination of the program when runtime errors occur while running the 
program. 
-So, these errors (runtime) are very dangerous because whenever the runtime errors occur in the programs,  program gets terminated
 abnormally on the same line where the error gets occurred without executing the next line of code.

*Note: Most people are saying Runtime Errors are Exceptions which is not true. Exceptions are classes that are responsible for 
abnormal termination of the program when runtime errors occur.

- Exception always needs to b handled using try and catch block
- finally block will always  get executed irrespective of exception occured or not
- Two types of Errors:
1.Compile tyme errors - due to syntax mistakes
2.Runtime errors - occurs during runtime .. example - if we devide a num by zero

-There are two methods to handle the exception in .NET

1.Logical Implementation
2.Try Catch Implementation

Enums- It is mainly used to assign the names or string values to integral constants, that make a program easy to read and maintain.
-wenevr we writing a code and we want 

#7/10/22

- have gone through enums 
- static class 
- partial class and Methods
- extension methods 
- Attended  virtual sessions
-Method overloading
- method overriding 
